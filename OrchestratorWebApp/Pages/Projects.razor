@page "/projects"

@using SharedLib.DTOs
@using OrchestratorWebApp.Services
@inject ProjectService ProjectService

<PageTitle>Projects</PageTitle>

<h1>Projects</h1>

@if (projects == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in projects)
            {
                <tr>
                    <td>@project.Name</td>
                    <td>@project.Repository.Name</td>
                    <td>@project.Status</td>
                    <td>
                        <a href="/projects/@project.Id" class="btn btn-info">Details</a>
                        @if (project.Status == "Unconfigured")
                        {
                            <a href="/projects/@project.Id/configure" class="btn btn-secondary">Configure</a>
                        }
                        else
                        {
                            <button class="btn btn-success" disabled="@(project.Status != "Configured")">Start</button>
                            <button class="btn btn-warning" disabled="@(project.Status != "Running")">Stop</button>
                        }
                        <button class="btn btn-danger">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ProjectResponse[]? projects;

    protected override async Task OnInitializedAsync()
    {
        projects = await ProjectService.GetProjectsAsync();
    }
}